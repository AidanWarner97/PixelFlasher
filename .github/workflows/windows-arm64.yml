#
# Copyright (C) 2024 Badabing2005
# SPDX-License-Identifier: AGPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
# for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# Also add information on how to contact you by electronic and paper mail.
#
# If your software can interact with users remotely through a computer network,
# you should also make sure that it provides a way for users to get its source.
# For example, if your program is a web application, its interface could
# display a "Source" link that leads users to an archive of the code. There are
# many ways you could offer source, and different solutions will be better for
# different programs; see section 13 for the specific requirements.
#
# You should also get your employer (if you work as a programmer) or school, if
# any, to sign a "copyright disclaimer" for the program, if necessary. For more
# information on this, and how to apply and follow the GNU AGPL, see
# <https://www.gnu.org/licenses/>.

name: Build for Windows ARM64

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build tags'

jobs:
  build_windows_arm64:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          # Using x64 Python for cross-compilation

      - name: Install Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
        with:
          sdk-version: 22621

      - name: Create virtual environment
        shell: pwsh
        run: python -m venv myenv

      - name: Activate virtual environment
        shell: pwsh
        run: .\myenv\Scripts\Activate.ps1

      - name: Install build tools
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel build delvewheel

      - name: Build wxPython for ARM64
        shell: pwsh
        run: |
          git clone https://github.com/wxWidgets/Phoenix.git
          cd Phoenix
          python build.py dox etg --nodoc sip
          python build.py build_wx --arm64
          python build.py build_py --python=python
          pip install -e .

      - name: Install requirements
        shell: pwsh
        run: |
          pip install --upgrade pyinstaller
          pip install -r requirements.txt

      - name: Modify build spec
        run: |
          (Get-Content build-on-win.spec) -replace 'exe = EXE\(', 'exe = EXE(target_arch=''arm64'',' | Set-Content build-on-win.spec
        shell: pwsh

      - name: Build ARM64 application
        run: .\build.bat
        shell: cmd

      - name: Sign Windows ARM64 Executable
        uses: skymatic/code-sign-action@v3
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERT_PASSWORD }}'
          certificatesha1: '${{ secrets.CERTHASH }}'
          certificatename: '${{ secrets.CERTNAME }}'
          description: 'PixelFlasher ARM64'
          timestampUrl: 'http://timestamp.digicert.com'
          folder: 'dist'
          recursive: false

      - name: Generate SHA256
        run: |
          certutil -hashfile dist/PixelFlasher.exe SHA256 > dist/PixelFlasher-arm64.exe.sha256
          cat dist/PixelFlasher-arm64.exe.sha256
        shell: pwsh

      - name: Rename executable
        run: Move-Item dist/PixelFlasher.exe dist/PixelFlasher-arm64.exe
        shell: pwsh

      - name: Upload ARM64 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PixelFlasher-ARM64.exe Artifacts
          path: |
            dist/PixelFlasher-arm64.exe
            dist/PixelFlasher-arm64.exe.sha256
